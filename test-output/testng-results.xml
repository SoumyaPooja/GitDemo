<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-13T18:16:50 IST" name="Loan Department" finished-at="2023-04-13T18:16:50 IST" duration-ms="98">
    <groups>
      <group name="Smoke">
        <method signature="Day2.demo()[pri:0, instance:firsttestngpackage.Day2@44ebcd03]" name="demo" class="firsttestngpackage.Day2"/>
        <method signature="Day3.mobileLoginHomeLoan()[pri:0, instance:firsttestngpackage.Day3@694abbdc]" name="mobileLoginHomeLoan" class="firsttestngpackage.Day3"/>
        <method signature="Day4.mobileSignOutCarLoan()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" name="mobileSignOutCarLoan" class="firsttestngpackage.Day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-04-13T18:16:50 IST" name="Car Loan" finished-at="2023-04-13T18:16:50 IST" duration-ms="97">
      <class name="firsttestngpackage.Day4">
        <test-method is-config="true" signature="bfSuit()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="bfSuit" finished-at="2023-04-13T18:16:50 IST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuit -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeclass" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="mobileLoginCarLoan" data-provider="getData" finished-at="2023-04-13T18:16:50 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="mobileLoginCarLoan" data-provider="getData" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="mobileLoginCarLoan" data-provider="getData" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="mobileSignOutCarLoan" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="beforeEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="webLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="webLoginCarLoan" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CarLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterEvery" finished-at="2023-04-13T18:16:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:firsttestngpackage.Day4@f6efaab]" started-at="2023-04-13T18:16:50 IST" name="afterclass" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- firsttestngpackage.Day4 -->
      <class name="firsttestngpackage.FirstTestNGZFile">
        <test-method is-config="true" signature="afSuite()[pri:0, instance:firsttestngpackage.FirstTestNGZFile@6aba2b86]" started-at="2023-04-13T18:16:50 IST" name="afSuite" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- firsttestngpackage.FirstTestNGZFile -->
    </test> <!-- Car Loan -->
    <test started-at="2023-04-13T18:16:50 IST" name="Personal Loan" finished-at="2023-04-13T18:16:50 IST" duration-ms="98">
      <class name="firsttestngpackage.Day3">
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:firsttestngpackage.Day3@694abbdc]" started-at="2023-04-13T18:16:50 IST" name="loginAPIHomeLoan" finished-at="2023-04-13T18:16:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:firsttestngpackage.Day3@694abbdc]" started-at="2023-04-13T18:16:50 IST" name="mobileLoginHomeLoan" finished-at="2023-04-13T18:16:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method signature="webLoginHomeLoan(java.lang.String)[pri:0, instance:firsttestngpackage.Day3@694abbdc]" started-at="2023-04-13T18:16:50 IST" name="webLoginHomeLoan" finished-at="2023-04-13T18:16:50 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PersonalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
      </class> <!-- firsttestngpackage.Day3 -->
      <class name="firsttestngpackage.Day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:firsttestngpackage.Day2@44ebcd03]" started-at="2023-04-13T18:16:50 IST" name="prerequisite" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="demo()[pri:0, instance:firsttestngpackage.Day2@44ebcd03]" started-at="2023-04-13T18:16:50 IST" name="demo" finished-at="2023-04-13T18:16:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- firsttestngpackage.Day2 -->
      <class name="firsttestngpackage.FirstTestNGZFile">
        <test-method signature="demo()[pri:0, instance:firsttestngpackage.FirstTestNGZFile@6aba2b86]" started-at="2023-04-13T18:16:50 IST" name="demo" finished-at="2023-04-13T18:16:50 IST" duration-ms="15" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at firsttestngpackage.FirstTestNGZFile.demo(FirstTestNGZFile.java:17)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1589)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:firsttestngpackage.FirstTestNGZFile@6aba2b86]" started-at="2023-04-13T18:16:50 IST" name="lastExecution" finished-at="2023-04-13T18:16:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- firsttestngpackage.FirstTestNGZFile -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
